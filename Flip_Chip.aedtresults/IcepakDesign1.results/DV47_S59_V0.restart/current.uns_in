(ti-menu-load-string "file confirm-overwrite? no")
file start-trans Setup1.uns_out
(define t0)
(set! t0 (cpu-time))
(define wt0)
(set! wt0 (time))
(if (err-protect (%enable-dynamic-mesh-node-ids #t)) (pp "Ok") (begin (close-output-port (open-output-file "Setup1.uns_out")) (close-output-port (open-output-file "Setup1.uns_err"))))
(if (err-protect (ti-menu-load-string "rc Setup1.cas")) (pp "Ok") (begin (close-output-port (open-output-file "Setup1.uns_out")) (close-output-port (open-output-file "Setup1.cas_err"))))
(ti-menu-load-string "file hdf-files? no")
(load "C:\Program Files\ANSYS Inc\ANSYS Student\v252\AnsysEM/icepak/lib/icepak/icepak.scm")
(if (err-protect (ti-menu-load-string "def mesh-interfaces one-to-one-pairing? yes")) (pp "Ok") (begin (close-output-port (open-output-file "Setup1.uns_out")) (close-output-port (open-output-file "Setup1.uns_err"))))
(if (err-protect (ti-menu-load-string "def mesh-interfaces create all_interfaces yes no")) (pp "Ok") (begin (close-output-port (open-output-file "Setup1.uns_out")) (close-output-port (open-output-file "Setup1.uns_err"))))
(icepak-reset-interface-to-wall)
(begin (define g_c (car (%grid-check))) (if g_c (begin (define port (open-output-file "GRID_FAIL")) (exit))))
(load "C:\Program Files\ANSYS Inc\ANSYS Student\v252\AnsysEM/icepak/lib/icepak/benchmark.scm")
(if (err-protect (ti-menu-load-string "def mo rad s2s? no")) (pp "Ok") (begin (close-output-port (open-output-file "Setup1.uns_out")) (close-output-port (open-output-file "Setup1.uns_err"))))
(if (err-protect (ti-menu-load-string "s i i")) (pp "Ok") (begin (close-output-port (open-output-file "Setup1.uns_out")) (close-output-port (open-output-file "Setup1.init_err"))))
(load "C:\Program Files\ANSYS Inc\ANSYS Student\v252\AnsysEM/icepak/lib/icepak/set-si-bc.scm")
(if (err-protect (init-si-zones)) (pp "Ok") (begin (close-output-port (open-output-file "Setup1.uns_out")) (close-output-port (open-output-file "Setup1.uns_err"))))
(if (err-protect (set-si-bc 'all_interfaces 'interf54 'wall '((d (constant . 3.3e-05)) (planar-conduction? . #t) (q-dot (constant . 0.000000)) (material . _5708_steel_oxidised_surface)) '((d (constant . 3.3e-05)) (planar-conduction? . #t) (q-dot (constant . 0.000000)) (material . _5708_steel_oxidised_surface)))) (pp "Ok") (begin (close-output-port (open-output-file "Setup1.uns_out")) (close-output-port (open-output-file "Setup1.uns_err"))))
(if (err-protect (set-si-bc 'all_interfaces 'interf56 'wall '((d (constant . 3.3e-05)) (planar-conduction? . #t) (q-dot (constant . 0.000000)) (material . _5708_steel_oxidised_surface)) '((d (constant . 3.3e-05)) (planar-conduction? . #t) (q-dot (constant . 0.000000)) (material . _5708_steel_oxidised_surface)))) (pp "Ok") (begin (close-output-port (open-output-file "Setup1.uns_out")) (close-output-port (open-output-file "Setup1.uns_err"))))
(if (err-protect (set-si-bc 'all_interfaces 'interf60  'wall '((d (constant . 3.3e-05)) (planar-conduction? . #t) (q-dot (constant . 0.000000)) (thermal-bc . 3) (int-rad? . #f) (roughness-height . ((constant . 0.000000))) (material . practical_practice_1_flipchip_bga1_steel_oxidised_surface)) '((d (constant . 3.3e-05)) (planar-conduction? . #t) (q-dot (constant . 0.000000)) (thermal-bc . 3) (int-rad? . #f) (roughness-height . ((constant . 0.000000))) (material . practical_practice_1_flipchip_bga1_steel_oxidised_surface)))) (pp "Ok") (begin (close-output-port (open-output-file "Setup1.uns_out")) (close-output-port (open-output-file "Setup1.uns_err"))))
(if (err-protect (set-si-bc 'all_interfaces 'interf62  'wall '((d (constant . 3.3e-05)) (planar-conduction? . #t) (q-dot (constant . 0.000000)) (thermal-bc . 3) (int-rad? . #f) (roughness-height . ((constant . 0.000000))) (material . practical_practice_1_flipchip_bga1_steel_oxidised_surface)) '((d (constant . 3.3e-05)) (planar-conduction? . #t) (q-dot (constant . 0.000000)) (thermal-bc . 3) (int-rad? . #f) (roughness-height . ((constant . 0.000000))) (material . practical_practice_1_flipchip_bga1_steel_oxidised_surface)))) (pp "Ok") (begin (close-output-port (open-output-file "Setup1.uns_out")) (close-output-port (open-output-file "Setup1.uns_err"))))
(set! suffix-expand-filename (lambda (fn suffix) fn))
(if (err-protect (%set-void-dynamic-mesh-node-ids)) (pp "Ok") (begin (close-output-port (open-output-file "Setup1.uns_out")) (close-output-port (open-output-file "Setup1.uns_err"))))
wc Setup1.nc_cas
(ti-menu-load-string "file hdf-files? yes")
(if (err-protect (%write-nodemap "Setup1.nodemap")) (pp "Ok") (begin (close-output-port (open-output-file "Setup1.uns_out")) (close-output-port (open-output-file "Setup1.uns_err"))))
(load "C:\Program Files\ANSYS Inc\ANSYS Student\v252\AnsysEM/icepak/lib/icepak/monitor-create.scm")
(read-monitors "Setup1.pmon" "Setup1")
(retain-monitor-usage #f)
(define ps-port)
(set! ps-port (open-file "init_proc_stats" "wl"))
(set-echo-ports! *console-output-port* (cons ps-port (echo-ports *console-output-port*)))
(proc-stats)
(set-echo-ports! *console-output-port* (delete ps-port (echo-ports *console-output-port*)))
(flush-output-port ps-port)
(close-output-port ps-port)
(if (err-protect (load "Setup1.sovcommands.scm") #t) (pp "Ok") (begin (close-output-port (open-output-file "Setup1.uns_out")) (close-output-port (open-output-file "Setup1.soln_err"))))
(define t1)
(set! t1 (cpu-time))
(define wt1)
(set! wt1 (time))
(format "Solver Initialization: cpu=~a real=~a~%" (- t1 t0) (- wt1 wt0))
(if (err-protect (benchmark-aedt '(icepak-iterate 100 "Setup1" "Setup1.res" 100 1 1))) (pp "Ok") (begin (close-output-port (open-output-file "Setup1.uns_out")) (close-output-port (open-output-file "Setup1.soln_err"))))
(define ps-port)
(set! ps-port (open-file "solve_proc_stats" "wl"))
(set-echo-ports! *console-output-port* (cons ps-port (echo-ports *console-output-port*)))
(proc-stats)
(set-echo-ports! *console-output-port* (delete ps-port (echo-ports *console-output-port*)))
(flush-output-port ps-port)
(close-output-port ps-port)
(err-protect (stop-transcript))
(prf-exit)
(exit)
